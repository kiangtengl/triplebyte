{"version":3,"sources":["features/user/index.ts","features/user/userActions.ts","features/user/userConstants.ts","infrastructure/rootState.ts","infrastructure/index.ts","infrastructure/rootReducer.ts","features/user/userSaga.ts","infrastructure/rootSaga.ts","infrastructure/configureStore.ts","features/user/userReducer.ts","features/user/userSelectors.ts","infrastructure/theme.ts","pages/Home/Home.tsx","pages/AppRoutes.tsx","App.tsx","index.tsx"],"names":["_userActions__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_userConstants__WEBPACK_IMPORTED_MODULE_1__","_userReducer__WEBPACK_IMPORTED_MODULE_2__","_userSelectors__WEBPACK_IMPORTED_MODULE_3__","r","set","test","typesafe_actions__WEBPACK_IMPORTED_MODULE_0__","createStandardAction","userConstants","namespace","defaultState","user","createRootState","history","Object","_home_kiangtengl_dev_triplebyte_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","router","location","action","_configureStore__WEBPACK_IMPORTED_MODULE_0__","createRootReducer","combineReducers","connectRouter","userReducer","logWhenUserChanges","userSaga","_ref","regenerator_default","a","wrap","_context","prev","next","payload","put","userActions","stop","_marked","_context2","all","takeEvery","getType","_marked2","rootSaga","rootSaga_marked","configureStore_history","createBrowserHistory","compose","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","baseCompose","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","routerMiddleware","run","immer__WEBPACK_IMPORTED_MODULE_0__","typesafe_actions__WEBPACK_IMPORTED_MODULE_1__","_userActions__WEBPACK_IMPORTED_MODULE_2__","_userConstants__WEBPACK_IMPORTED_MODULE_3__","state","type","produce","f","userSelectors","s","theme","primary","styled","baseStyled","baseCss","StyledDiv","div","_templateObject","p","dispatchProps","setUser","connect","onChange","useCallback","e","name","target","value","react_default","createElement","AppRoutes","react_router","exact","path","component","Home","App","styled_components_browser_esm","es","esm","pages_AppRoutes","ReactDOM","render","src_App","document","getElementById"],"mappings":"yFAAA,IAAAA,EAAAC,EAAA,IAAAA,EAAAC,EAAAC,EAAA,gCAAAH,IAAA,IAAAI,EAAAH,EAAA,IAAAA,EAAAC,EAAAC,EAAA,kCAAAC,EAAA,QAAAC,EAAAJ,EAAA,IAAAA,EAAAC,EAAAC,EAAA,gCAAAE,EAAA,QAAAC,EAAAL,EAAA,IAAAA,EAAAC,EAAAC,EAAA,kCAAAG,EAAA,IAAAL,EAAA,qCCAAA,EAAAM,EAAAJ,GAAAF,EAAAC,EAAAC,EAAA,wBAAAK,IAAAP,EAAAC,EAAAC,EAAA,yBAAAM,IAAA,IAAAC,EAAAT,EAAA,IAGaO,EAAMG,+BAAqB,YAArBA,GAENF,EAAOE,+BAAqB,aAArBA,oCCLpB,IAEMC,EAAgB,CACpBC,UAHgB,OAIhBC,aAAc,CACZC,KAAM,OAIKH,2DCQAI,IARS,SAACC,GAAD,OAAAC,OAAAC,EAAA,EAAAD,CAAA,CACtBE,OAAQ,CACNC,SAAUJ,EAAQI,SAClBC,OAAQL,EAAQK,SAEjBV,gBAAcC,UAAYD,gBAAcE,gDCd3C,IAAAS,EAAAtB,EAAA,IAAAA,EAAAC,EAAAC,EAAA,mCAAAoB,EAAA,IAAAtB,EAAAC,EAAAC,EAAA,4BAAAoB,EAAA,IAAAtB,EAAA,IAAAA,EAAA,wFCceuB,MAPf,SAA2BP,GACzB,OAAOQ,YAAuC,CAC5CL,OAAQM,YAAcT,GACtBF,KAAMY,qECNAC,cAIOC,GAJjB,SAAUD,EAAVE,GAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFN,EAA+BO,QAA/BH,EAAAE,KAAA,EACQE,YAAIC,UADZ,wBAAAL,EAAAM,SAAAC,GAIO,SAAUZ,IAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OACL,OADKM,EAAAN,KAAA,EACCO,YAAI,CAACC,YAAUC,kBAAQN,OAAkBX,KAD1C,wBAAAc,EAAAF,SAAAM,GAIQjB,mBCTLkB,GAAV,SAAUA,IAAV,OAAAhB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFF,EAAAE,KAAA,EACQO,YAAI,CAACd,MADb,wBAAAK,EAAAM,SAAAQ,GAIeD,gBCPf9C,EAAAC,EAAAC,EAAA,sBAAA8C,IAQO,IAAMhC,EAAUiC,cAEjBC,EACHC,OAAeC,sCAAwCC,IAgB3CC,IAdf,SAAwBtC,GACtB,IAAMuC,EAAiBC,cAEjBC,EAAQC,YACZnC,EAAkBP,GAClBD,YAAgBC,GAChBkC,EAAQS,YAAgBC,YAAiB5C,GAAUuC,KAKrD,OAFAA,EAAeM,IAAIf,GAEZW,oCCvBT,IAAAK,EAAA9D,EAAA,IAAA+D,EAAA/D,EAAA,IAAAgE,EAAAhE,EAAA,IAAAiE,EAAAjE,EAAA,IAqBe0B,IAfK,SAACwC,EAA8B7C,GACjD,IAAK6C,EACH,OAAOvD,IAAcE,aAGvB,OAAQQ,EAAO8C,MACb,KAAKvB,kBAAQN,OACX,OAAO8B,YAAQF,EAAO,SAAAjE,GACpBA,EAAEa,KAAOO,EAAOe,UAEpB,QACE,OAAO8B,qCCfb,IAAoBG,EAGdC,EAAgB,CACpBxD,MAJkBuD,EAIV,SAAAE,GAAC,OAAIA,EAAEzD,MAJ4C,SAACyD,GAAD,OAC3DF,EAAEE,EAAEzD,SAMSwD,qKCJTE,EAAQ,CACZC,QAAS,OAYEC,EAASC,IAGPH,GAFII,IAEJJ,yIChBf,IAAMK,EAAYH,EAAOI,IAAVC,IACJ,SAAAC,GAAC,OAAIA,EAAER,MAAMC,UAOlBQ,EAAgB,CACpBC,QAAS5C,cAAY/B,KAuBR4E,kBA5BS,SAACZ,GAAD,MAAmB,CACzCzD,KAAMwD,gBAAcxD,KAAKyD,KA6BzBU,EAFaE,CAlBf,SAAAtD,GAAkC,IAAlBqD,EAAkBrD,EAAlBqD,QACRE,EAAWC,sBACf,SAAAC,GACEJ,EAAQ,CACNK,KAAMD,EAAEE,OAAOC,SAGnB,CAACP,IAGH,OACEQ,EAAA3D,EAAA4D,cAACd,EAAD,KACEa,EAAA3D,EAAA4D,cAAA,iBACAD,EAAA3D,EAAA4D,cAAA,SAAOP,SAAUA,OCrBRQ,MARf,WACE,OACEF,EAAA3D,EAAA4D,cAACE,EAAA,EAAD,KACEH,EAAA3D,EAAA4D,cAACE,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWC,MCExCxC,EAAQH,yBAAetC,WAcFkF,EAZL,WACpB,OACER,EAAA3D,EAAA4D,cAACQ,EAAA,EAAD,CAAe3B,MAAOA,GACpBkB,EAAA3D,EAAA4D,cAACS,EAAA,EAAD,CAAU3C,MAAOA,GACfiC,EAAA3D,EAAA4D,cAACU,EAAA,EAAD,CAAiBrF,QAASA,WACxB0E,EAAA3D,EAAA4D,cAACW,EAAD,UCZVC,IAASC,OAAOd,EAAA3D,EAAA4D,cAACc,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.733a11a8.chunk.js","sourcesContent":["import * as userActions from \"./userActions\";\n\nexport { default as userConstants } from \"./userConstants\";\nexport { default as userReducer } from \"./userReducer\";\nexport { default as userSelectors } from \"./userSelectors\";\nexport * from \"./userTypes\";\nexport { userActions };\n","import { createStandardAction } from \"typesafe-actions\";\nimport { User } from \"./userTypes\";\n\nexport const set = createStandardAction(\"@user/set\")<User>();\n\nexport const test = createStandardAction(\"@user/test\")<undefined>();\n","const namespace = \"user\" as const;\n\nconst userConstants = {\n  namespace,\n  defaultState: {\n    user: null\n  }\n};\n\nexport default userConstants;\n","import { userConstants, UserState } from \"@/features/user\";\nimport { RouterState } from \"connected-react-router\";\nimport { History } from \"history\";\n\nexport interface RootState {\n  router: RouterState;\n  [userConstants.namespace]: UserState;\n}\n\nconst createRootState = (history: History): RootState => ({\n  router: {\n    location: history.location,\n    action: history.action\n  },\n  [userConstants.namespace]: userConstants.defaultState\n});\n\nexport default createRootState;\n","export { default as configureStore, history } from \"./configureStore\";\nexport * from \"./rootAction\";\nexport * from \"./rootState\";\n","import { userReducer } from \"@/features/user\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { combineReducers } from \"redux\";\nimport { RootAction } from \"./rootAction\";\nimport { RootState } from \"./rootState\";\n\nfunction createRootReducer(history: History) {\n  return combineReducers<RootState, RootAction>({\n    router: connectRouter(history) as any,\n    user: userReducer\n  });\n}\n\nexport default createRootReducer;\n","import { all, put, takeEvery } from \"redux-saga/effects\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport * as userActions from \"./userActions\";\n\nfunction* logWhenUserChanges({ payload }: ActionType<typeof userActions.set>) {\n  yield put(userActions.test());\n}\n\nexport function* userSaga() {\n  yield all([takeEvery(getType(userActions.set), logWhenUserChanges)]);\n}\n\nexport default userSaga;\n","import userSaga from \"@/features/user/userSaga\";\nimport { all } from \"redux-saga/effects\";\n\nfunction* rootSaga() {\n  yield all([userSaga()]);\n}\n\nexport default rootSaga;\n","import { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory, History } from \"history\";\nimport { applyMiddleware, compose as baseCompose, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport createRootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\nimport createRootState from \"./rootState\";\n\nexport const history = createBrowserHistory();\n\nconst compose =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || baseCompose;\n\nfunction configureStore(history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    createRootReducer(history),\n    createRootState(history),\n    compose(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nexport default configureStore;\n","import { RootAction } from \"@/infrastructure/rootAction\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport * as userActions from \"./userActions\";\nimport userConstants from \"./userConstants\";\nimport { UserState } from \"./userTypes\";\n\nconst userReducer = (state: UserState | undefined, action: RootAction) => {\n  if (!state) {\n    return userConstants.defaultState;\n  }\n\n  switch (action.type) {\n    case getType(userActions.set):\n      return produce(state, d => {\n        d.user = action.payload;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { RootState } from \"@/infrastructure\";\nimport { UserState } from \"./userTypes\";\n\nconst $ = <TOutput>(f: (userState: UserState) => TOutput) => (s: RootState) =>\n  f(s.user);\n\nconst userSelectors = {\n  user: $(s => s.user)\n};\n\nexport default userSelectors;\n","import baseStyled, {\n  css as baseCss,\n  ThemedStyledInterface,\n  BaseThemedCssFunction\n} from \"styled-components\";\n\nconst theme = {\n  primary: \"red\"\n};\n\nexport type AppTheme = typeof theme;\n\nexport const themeProps = {\n  theme\n};\n\n/**\n * Makes theme property strongly\n */\nexport const styled = baseStyled as ThemedStyledInterface<AppTheme>;\nexport const css = baseCss as BaseThemedCssFunction<AppTheme>;\n\nexport default theme;\n","import { userActions, userSelectors } from \"@/features/user\";\nimport { RootState } from \"@/infrastructure\";\nimport { styled } from \"@/infrastructure/theme\";\nimport React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst StyledDiv = styled.div`\n  color: ${p => p.theme.primary};\n`;\n\nconst mapStateToProps = (s: RootState) => ({\n  user: userSelectors.user(s)\n});\n\nconst dispatchProps = {\n  setUser: userActions.set\n};\n\ntype Props = typeof dispatchProps;\n\nfunction Home({ setUser }: Props) {\n  const onChange = useCallback(\n    e => {\n      setUser({\n        name: e.target.value\n      });\n    },\n    [setUser]\n  );\n\n  return (\n    <StyledDiv>\n      <div>Hi</div>\n      <input onChange={onChange} />\n    </StyledDiv>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  dispatchProps\n)(Home);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Home } from \"./Home\";\n\nfunction AppRoutes() {\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\" component={Home} />\n    </Switch>\n  );\n}\n\nexport default AppRoutes;\n","import theme from \"@/infrastructure/theme\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport React from \"react\";\nimport { hot } from \"react-hot-loader\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"styled-components\";\nimport { configureStore, history } from \"./infrastructure\";\nimport AppRoutes from \"./pages/AppRoutes\";\n\nconst store = configureStore(history);\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <AppRoutes />\n        </ConnectedRouter>\n      </Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}